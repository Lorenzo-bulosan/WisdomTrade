@{
    ViewData["Title"] = "Index";
}

<h1>Algorithmic trading</h1>

<p>@ViewBag.Test</p>

<div>
    <canvas id="Chart"></canvas>
</div>

<div>
    <p>Simple strategy: Taking SMA (simple moving average) line of 200 days and 50days and but when they cross </p>
</div>

<h3>Entry point at @ViewBag.EntryPointDate, current price: @ViewBag.EntryPoint</h3>

@*@foreach (var item in @ViewBag.EntryPointDate)
{
    <p>@Html.</p>
}*@


@*js library for graph*@
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

<script>
    window.onload = function () {
        DrawGraph();
    }

    function DrawGraph() {

        var ctx = document.getElementById('Chart').getContext('2d');
        var chart = new Chart(ctx, {

            type: 'line',
            data:
            {
                labels: @Html.Raw(ViewBag.Dates),
                datasets: [
                    // Closing price
                    {
                        label: 'Closing price',
                        backgroundColor: 'rgb(0, 0, 0)',
                        borderColor: 'rgb(0, 0, 0)',
                        data: @Html.Raw(ViewBag.ClosingPrice),
                        fill: false,
                    },
                    // SMA1
                    {
                        label: 'SMA1',
                        backgroundColor: 'rgb(200, 50, 37)',
                        borderColor: 'rgb(200, 50, 37)',
                        data: @Html.Raw(ViewBag.SMAClosingPrice1),
                        fill: false,
                    },
                    // SMA2
                    {
                        label: 'SMA2',
                        backgroundColor: 'rgb(25, 20, 200)',
                        borderColor: 'rgb(25, 20, 200)',
                        data: @Html.Raw(ViewBag.SMAClosingPrice2),
                        fill: false,
                    }
                ]
            },

            // Configuration options go here
            options: {
                title: {
                    display: true,
                    text: 'Closing price IBM'
                },
                scales: {
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: 'Closing price'
                        }
                    }]
                }
            }
        });
    }
</script>